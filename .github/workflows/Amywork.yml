name: myworkflow
on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  push:
    branches:
      - main
  schedule:
    - cron: '0 12 * * 1'
    
jobs:
    freenom:
      runs-on: ubuntu-20.04
      steps:
#         - name: checkout
#           uses: actions/checkout@v2 此repo代码加载
        - name: clone
          run: git clone https://github.com/SunYufei/freenom.git
        - name: run code
          run: pip3 install requests & python3 freenom/run.py -u ${{ secrets.FREENOM_USERNAME }} -p ${{ secrets.FREENOM_PASSWORD }}
    epic:
    #使用指定版本号的好处（Ubuntu等随意
      runs-on: ubuntu-latest 
      steps:
        - name: clone
          run: git clone https://github.com/QIN2DIM/epic-awesome-gamer.git ./
        - name: Set up Python 3.8
          uses: actions/setup-python@v1
          with:
            python-version: 3.8

        - name: Install requirements
          run: |
            pip install -r requirements.txt
        - name: Scaffold Install
          run: |
            echo -e "EMAIL: ${{secrets.EPIC_EMAIL}}\nPASSWORD: ${{secrets.EPIC_PASSWORD}}" > src/config.yaml
            cd src && python main.py install
        - name: Scaffold Challenge
          run: |
            export LANG=zh_CN.UTF8
            cd src && python main.py challenge
        # 五分钟左右搬空免费商店
        - name: Scaffold Get
          run: |
            export LANG=zh_CN.UTF8
            cd src && python main.py get          
#repo没修复chap错误     epic:
#       runs-on: ubuntu-20.04
#       steps:
#         - name: clone
#           run: git clone https://github.com/luminoleon/epicgames-claimer.git
#         - name: clone是异步的不能cd，但单独cd切不进去
#           run: ls epicgames-claimer & cd epicgames-claimer
#         - name: install_dependence
#           run: sudo sh epicgames-claimer/install_dependencies.sh & pip3 install -r epicgames-claimer/requirements.txt
#         - name: run_main
#           run: python3 epicgames-claimer/main.py -u ${{ secrets.EPIC_USERNAME }} -p ${{ secrets.EPIC_PASSWORD }} -ps ${{ secrets.SERVER_PUSH_KEY }}

# jobs: 容器里没有main文件，看初始化容器貌似也覆盖了entrypoint，，
#   my_job:
#     runs-on: ubuntu-20.04
#     container:
#       image: luminoleon/epicgames-claimer
#       env:
#         NODE_ENV: development
#         TZ: Asia/Shanghai
#         EMAIL: ${{ secrets.EPIC.USERNAME }}
#         PASSWORD: ${{ secrets.EPIC.PASSWORD }}
#       ports:
#         - 80
#       volumes:
#         - my_docker_volume:/volume_mount
# #       options: --cpus 1
#     steps:
#       - name: ls
#         run: ls
#       - name: runpy
#         run: python3 main.py -c chromium-browser
#       - name: wait
#         run: date ; sleep 10s ; date
# jobs: 
#   autorun:
#     runs-on: ubuntu-20.04
#     steps:
#       - name: run docker container
#         uses: docker://luminoleon/epicgames-claimer
#         with:
#           args:
#       - name: run docker interact
#         run: docker run luminoleon/epicgames-claimer -u ${{ secrets.EPIC.USERNAME }} -p ${{ secrets.EPIC.PASSWORD }}

